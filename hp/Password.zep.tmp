namespace Hp;

class Password{
    private static __VAR__ = __KEY__;
    static private function xor(uint! s)->uint{
        uint a = (self::__VAR__ & 0xFF000000) >> 24;
        uint b = (self::__VAR__ & 0xFF0000) >> 16;
        uint c = (self::__VAR__ & 0xFF00) >> 8;
        uint d =  self::__VAR__ & 0xFF;
        return s ^ a ^ b ^ c ^ d;
    }

    /**
     * 设置密码
     */
    static public function setKey(uint! key)->void{
        let self::__VAR__ = key;
    }

    /**
     * 加密
     */
    static public function encode(string str)->string{
        char c;
        string result="";
        for c in str {
            let result .= sprintf("%02X", self::xor(ord(c)));
        }
        return result;
    }

    /**
     * 解密
     */
    static public function decode(string str)->string{
        int start=0,len=strlen(str);
        string result="";

        if(len % 2 == 1){
            return "";
        }
        while start < len {
            let result .= chr(self::xor(hexdec(substr(str, start, 2))));
            let start += 2;
        }
        return result;
    }
}